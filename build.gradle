buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
	maven {
		name = "darkcraft"
		url = "http://maven.darkcraft.io"
	}
}

apply plugin: 'forge'

version = "1.7.10-0.996"
group= "tardis" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "tardismod"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
	compile "io.darkcraft:darkcore:0.46:source"
	compile "thaumcraft:thaumcraft:1.7.10:source"
	compile "appeng:appeng:1.7.10:source"
	compile "cofh:cofhcore:3.0.0RC7-211"
	compile "com.buildcraft:buildcraft:6.4.9"
	compile "com.industrialcraft:industrialcraft-2:2.2.810"
	compile "dan200:computercraft:1.7.10:source"
	compile "mrtjp:projectred:4.7.0pre9.92"
	compile "waila:waila:1.7.10:source"
}

processResources
{
	exclude '**/*.wav'
	exclude '**/*.psd'
	exclude '**/*.PSD'
	exclude '**/*.blend'
	exclude '**/*.blend1'
	exclude '**/*.tga'
    // replace stuff in mcmod.info, nothing else
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
